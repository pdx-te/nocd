from flask import Flask, request
import random
import os
import binascii
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk
from threading import Thread


app = Flask(__name__)

# global var for the GTK window
bind_window = None
bind_number = None
bind_token  = None

NUM_CHARS_TOKEN = 30

def create_window(): 
    # Generate random number to show on the screen. The user should send a request
    # with the number to bind the user to the display
    global bind_number
    bind_number = random.randint(1, 1000)
    global bind_window 
    bind_window = Gtk.Window()
    label = Gtk.Label("<span size=\"600000\">" + str(bind_number) + "</span>")
    label.set_use_markup(True)
    bind_window.add(label)
    bind_window.show_all()
    gtk_thread = Thread(target=Gtk.main)
    gtk_thread.setDaemon(True)
    gtk_thread.start()

def generate_token():
    global NUM_CHARS_TOKEN
    return binascii.hexlify(os.urandom(NUM_CHARS_TOKEN))


@app.route("/")
def hello():
    return "Hello World!"


@app.route("/bind-noc-display-request")
def bind_noc_display_request():
    create_window()
    global bind_token
    bind_token = generate_token()
    return bind_token

@app.route("/bind-noc-display/te-<int:random>")
def bind_noc_display_reply(random):

    # Get the string with the random number provided by the NOC Display user
    # and if it matches the string generated by bind_noc_display_request
    # close the window and start accepting commands
    global bind_window
    global bind_number
    global bind_token
    print request.headers['Authorization']
    if random == bind_number and bind_token == request.headers['Authorization']:
      bind_window.destroy()
      Gtk.main_quit()
      return "NOC Display bound to NOC CLI."
      
    return "Incorrect bind number."


if __name__ == "__main__":
    app.run()
